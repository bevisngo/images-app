version: "3.8"

services:
  client:
    build:
      context: ..
      dockerfile: docker/Dockerfile.client
    volumes:
      - ../client:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
    command: npm run dev
    env_file:
      - ../client/.env

  read-service:
    build:
      context: ..
      dockerfile: docker/Dockerfile.read-service
    volumes:
      - ../server:/app
      - /app/node_modules
      - /app/dist
    ports:
      - "3002:3002"
    command: npm run start:dev read-service
    env_file:
      - ../server/.env
    depends_on:
      - mysql
      # - rabbitmq
      # - localstack

  write-service:
    build:
      context: ..
      dockerfile: docker/Dockerfile.write-service
    volumes:
      - ../server:/app
      - /app/node_modules
      - /app/dist
    ports:
      - "3001:3001"
    command: npm run start:dev write-service
    env_file:
      - ../server/.env
    depends_on:
      - mysql
      # - rabbitmq
      # - localstack

  auth-service:
    build:
      context: ..
      dockerfile: docker/Dockerfile.auth-service
    volumes:
      - ../server:/app
      - /app/node_modules
      - /app/dist
    ports:
      - "3003:3003"
    command: npm run start:dev auth-service
    env_file:
      - ../server/.env
    depends_on:
      - mysql
      # - rabbitmq
      # - localstack
  consumer:
    build:
      context: ..
      dockerfile: docker/Dockerfile.consumer
    volumes:
      - ../server:/app
      - /app/node_modules
      - /app/dist
    ports:
      - "3004:3004"
    command: npm run start:dev consumer
    env_file:
      - ../server/.env
    depends_on:
      - mysql
      - redis
      # - rabbitmq
      # - localstack
  # rabbitmq:
  #   image: "rabbitmq:3-management"
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672"
  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
  mysql:
    image: mysql:8.0
    container_name: docker-mysql-1
    environment:
      MYSQL_ROOT_PASSWORD: passwordroot
      MYSQL_DATABASE: image_app
      MYSQL_USER: bevis
      MYSQL_PASSWORD: password123
    volumes:
      - ./mysql-data:/var/lib/mysql
    ports:
      - "3306:3306"
  localstack:
    image: localstack/localstack:latest
    container_name: localstack
    ports:
      - "4566:4566" # Gateway to all LocalStack services
      - "4571:4571" # External service port
    environment:
      - SERVICES=s3
      - DEBUG=1
      - PERSISTENCE=1
      - AWS_DEFAULT_REGION=us-east-1
      - CLEAR_TMP_FOLDER=0
      - DOCKER_HOST=unix:///var/run/docker.sock
      - S3_DIR=/tmp/s3-mounts
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
      - "./mounts:/tmp/s3-mounts"
      - "/var/run/docker.sock:/var/run/docker.sock"
  awscli:
    image: amazon/aws-cli
    container_name: awscli
    depends_on:
      - localstack
    environment:
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ENDPOINT=http://localstack:4566
    entrypoint: /bin/sh -c "while true; do sleep 1000; done"
    volumes:
      - ./config/aws/s3/config:/config

volumes:
  localstack_data:
  mysql-data:
